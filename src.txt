mpfr_t initialPosition;
mpfr_t kappa;
mpfr_t theta;
mpfr_t initVol;
mpfr_t zeta;
mpfr_t mu;
mpfr_t timeStep;

mpfr_init2(initialPosition, 12);  // Initialize to 128-bit precision
mpfr_init2(kappa, 12);
mpfr_init2(theta, 12);
mpfr_init2(initVol, 12);
mpfr_init2(zeta, 12);
mpfr_init2(mu, 12);
mpfr_init2(timeStep, 12);

mpfr_set_d(initialPosition, 100.0, MPFR_RNDN);
mpfr_set_d(kappa, 1.0, MPFR_RNDN);
mpfr_set_d(theta, 0.2, MPFR_RNDN);
mpfr_set_d(initVol, 0.05, MPFR_RNDN);
mpfr_set_d(zeta, 0.3, MPFR_RNDN);
mpfr_set_d(mu, 0.05, MPFR_RNDN);
mpfr_set_d(timeStep, 0.01, MPFR_RNDN);
int numSteps = 253;

HestonProcess process(initialPosition, mu, initVol, kappa, theta, zeta);

std::cout << "Initial HestonProcess Properties:" << std::endl;
process.printProperties();
std::cout << "-----------------------------" << std::endl;

printHestonEvolution(process, timeStep, numSteps, "time_evolution.csv");

// Clean up
mpfr_clear(initialPosition);
mpfr_clear(kappa);
mpfr_clear(theta);
mpfr_clear(initVol);
mpfr_clear(zeta);
mpfr_clear(mu);
mpfr_clear(timeStep);

std::cout << "Final HestonProcess Properties:" << std::endl;
process.printProperties();
std::cout << "-----------------------------" << std::endl;
